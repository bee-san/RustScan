name: Test
on:
  pull_request:
    branches: [master]
  push:
    branches:
      - master
jobs:
  test:
    name: Test Suite
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          # ARM64 testing on Ubuntu (GitHub-hosted runners support ARM64)
          - os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
            cross: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}

      - uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Install cross-compilation tools
        if: matrix.cross
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Run tests (native)
        if: "!matrix.cross"
        run: just test

      - name: Run tests (cross-compiled)
        if: matrix.cross
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: |
          # Run unit tests that don't require execution on target platform
          cargo test --target ${{ matrix.target }} --lib --bins
          # Skip integration tests that would require ARM64 execution
